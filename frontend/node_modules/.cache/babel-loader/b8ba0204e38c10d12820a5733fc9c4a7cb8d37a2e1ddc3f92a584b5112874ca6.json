{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kuliah\\\\cuviq1\\\\frontend\\\\src\\\\CvUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CvUpload({\n  setResult\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) return;\n    const formData = new FormData();\n    formData.append(\"cv_file\", file);\n    try {\n      const response = await fetch(\"http://localhost:8000/match_cv/\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setResult(data);\n    } catch (err) {\n      console.error(\"Error uploading file\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload CV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(CvUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = CvUpload;\nexport default CvUpload;\nvar _c;\n$RefreshReg$(_c, \"CvUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CvUpload","setResult","_s","file","setFile","handleSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","err","console","error","onSubmit","children","type","accept","onChange","target","files","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Kuliah/cuviq1/frontend/src/CvUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction CvUpload({ setResult }) {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"cv_file\", file);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/match_cv/\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResult(data);\r\n    } catch (err) {\r\n      console.error(\"Error uploading file\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".pdf\"\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n      />\r\n      <button type=\"submit\">Upload CV</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CvUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACJ,IAAI,EAAE;IAEX,MAAMK,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEP,IAAI,CAAC;IAEhC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCf,SAAS,CAACc,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC5C;EACF,CAAC;EAED,oBACElB,OAAA;IAAMqB,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,gBAC3BtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,MAAM;MACbC,QAAQ,EAAGlB,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACF/B,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEX;AAAC5B,EAAA,CAjCQF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}